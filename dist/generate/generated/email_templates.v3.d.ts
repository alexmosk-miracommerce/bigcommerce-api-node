/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/marketing/email-templates': {
        /**
         * Get a list of email templates.
         *
         * > #### Note
         * > The `/marketing/email-templates` endpoints only work after opting into the new email management experience from your storeʼs control panel. You can opt-in by visiting Email Templates. If you have already opted in, visiting the Email Templates page will return a `404` error, and you will be able to access the new Transactional Emails page.
         */
        get: operations['getEmailTemplates'];
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
    };
    '/marketing/email-templates/{template-name}': {
        /**
         * Get a single global email template or a channel-specific email template override.
         *
         * > #### Note
         * > The `/marketing/email-templates` endpoints only work after opting into the new email management experience from your storeʼs control panel. You can opt-in by visiting [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates). If you have already opted in, visiting the [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates) page will return a `404` error, and you will be able to access the new [Transactional Emails](https://login.bigcommerce.com/deep-links/manage/transactional-emails) page.
         */
        get: operations['getEmailTemplate'];
        /** Update a global template or create a channel-specific email template override. */
        put: operations['updateEmailTemplate'];
        /** Removes a channel-specific email template override. */
        delete: operations['deleteEmailTemplateOverride'];
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
            path: {
                'template-name': string;
            };
        };
    };
}
export interface components {
    schemas: {
        ErrorResponse: components['schemas']['BaseError'] & {
            errors?: components['schemas']['DetailedErrors'];
        };
        /** @description Error payload for the BigCommerce API. */
        BaseError: {
            /** @description The HTTP status code. */
            status?: number;
            /** @description The error title describing the particular error. */
            title?: string;
            type?: string;
            instance?: string;
        };
        DetailedErrors: {
            [key: string]: string;
        };
        /**
         * EmailTemplatesCollection
         * @description A collection of all email templates.
         */
        EmailTemplatesCollection: components['schemas']['EmailTemplate'][];
        /**
         * EmailTemplate
         * @description Data for a particular email template
         */
        EmailTemplate: {
            /** @example account_reset_password_email */
            type_id?: 'abandoned_cart_email' | 'account_details_changed_email' | 'combined_order_status_email' | 'createaccount_email' | 'createguestaccount_email' | 'giftcertificate_email' | 'invoice_email' | 'ordermessage_notification' | 'return_confirmation_email' | 'return_statuschange_email' | 'product_review_email' | 'account_reset_password_email';
            /** @example <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html> */
            body?: string;
            translations?: components['schemas']['LocaleCollection'];
            /** @example Reset your password at {{store.name}} */
            subject?: string;
        };
        /**
         * LocaleObject
         * @description A particular localeʼs translations.
         */
        LocaleObject: {
            /**
             * @description Locale code for this language, such as "en", "en-us", "fr-ca".
             * @example en
             */
            locale?: string;
            /**
             * @description Language keys for the template. User-defined. Should match any lang keys used in the template.
             * @example [object Object]
             */
            keys?: {
                [key: string]: unknown;
            };
        };
        /**
         * LocaleCollection
         * @description A collection of locale translations for the static language.
         */
        LocaleCollection: components['schemas']['LocaleObject'][];
        /**
         * EmailTemplateUpdate
         * @description Data for updated template
         */
        EmailTemplateUpdate: {
            /** @example <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title> </head> <body> <p>     {{lang "reset_password" name=store.name}} </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}} </a>  </body> </html> */
            body: string;
            translations?: components['schemas']['LocaleCollection'];
            /** @example Reset your password at {{store.name}} */
            subject: string;
        } & {
            lang: unknown;
        };
        /** scratch */
        scratch: {
            id?: string;
        };
    };
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        ContentType: string;
        /** @description Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
        ChannelIdParam: number;
        /** @description Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults. */
        RequiredChannelIdParamForDelete: number;
    };
}
export interface operations {
    /**
     * Get a list of email templates.
     *
     * > #### Note
     * > The `/marketing/email-templates` endpoints only work after opting into the new email management experience from your storeʼs control panel. You can opt-in by visiting Email Templates. If you have already opted in, visiting the Email Templates page will return a `404` error, and you will be able to access the new Transactional Emails page.
     */
    getEmailTemplates: {
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
            query: {
                /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
                channel_id?: components['parameters']['ChannelIdParam'];
            };
        };
        responses: {
            /** An array of email templates on the store */
            200: {
                content: {
                    'application/json': {
                        data?: components['schemas']['EmailTemplatesCollection'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
        };
    };
    /**
     * Get a single global email template or a channel-specific email template override.
     *
     * > #### Note
     * > The `/marketing/email-templates` endpoints only work after opting into the new email management experience from your storeʼs control panel. You can opt-in by visiting [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates). If you have already opted in, visiting the [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates) page will return a `404` error, and you will be able to access the new [Transactional Emails](https://login.bigcommerce.com/deep-links/manage/transactional-emails) page.
     */
    getEmailTemplate: {
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
            path: {
                'template-name': string;
            };
            query: {
                /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
                channel_id?: components['parameters']['ChannelIdParam'];
            };
        };
        responses: {
            /** OK */
            200: {
                content: {
                    'application/json': {
                        data?: components['schemas']['EmailTemplate'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
        };
    };
    /** Update a global template or create a channel-specific email template override. */
    updateEmailTemplate: {
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                'Content-Type': components['parameters']['ContentType'];
            };
            path: {
                'template-name': string;
            };
            query: {
                /** Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only. */
                channel_id?: components['parameters']['ChannelIdParam'];
            };
        };
        responses: {
            /** OK */
            200: {
                content: {
                    'application/json': {
                        data?: components['schemas']['EmailTemplate'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** Bad Request */
            400: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['EmailTemplate'];
            };
        };
    };
    /** Removes a channel-specific email template override. */
    deleteEmailTemplateOverride: {
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
            path: {
                'template-name': string;
            };
            query: {
                /** Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults. */
                channel_id: components['parameters']['RequiredChannelIdParamForDelete'];
            };
        };
        responses: {
            /** OK */
            200: unknown;
        };
    };
}
export interface external {
}
