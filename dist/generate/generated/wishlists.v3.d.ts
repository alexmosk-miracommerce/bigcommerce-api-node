/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/wishlists': {
        /** Returns a list of wishlists. Optional filter parameters can be passed in. */
        get: operations['WishlistsGet'];
        /**
         * Creates a wishlist and wishlist item. More than one item can be added in the POST.
         *
         * **Required Fields**
         * * name
         * * customer_id
         */
        post: operations['WishlistsPost'];
    };
    '/wishlists/{wishlist_id}/items/{item_id}': {
        /** Deletes a wishlist item. */
        delete: operations['WishlistsItemsByIdDelete'];
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
                item_id: number;
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
    };
    '/wishlists/{wishlist_id}': {
        /** Returns a single wishlist. */
        get: operations['WishlistsByIdGet'];
        /**
         * Updates a wishlist.
         *
         * Use this endpoint to update existing wishlist items, change the wishlist ºs name and whether the wishlist is available publicly. To add or delete a wishlist item, see [Wishlist Items](/docs/rest-management/wishlists/wishlists-items).
         */
        put: operations['WishlistsByIdPut'];
        /** Deletes a wishlist. */
        delete: operations['WishlistsByIdDelete'];
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
    };
    '/wishlists/{wishlist_id}/items': {
        /** Adds a wishlist item. More than one item can be added at a time. */
        post: operations['WishlistsItemsByIdPost'];
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
    };
}
export interface components {
    schemas: {
        /** wishlist_Post */
        wishlist_Post: {
            /**
             * Format: int32
             * @description The customer id.
             * @example 12
             */
            customer_id: number;
            /** @description Whether the wishlist is available to the public. */
            is_public?: boolean;
            /**
             * @description The title of the wishlist.
             * @example School Shopping
             */
            name?: string;
            /** @description Array of wishlist items. */
            items?: {
                /**
                 * Format: int32
                 * @description The ID of the product.
                 * @example 12
                 */
                product_id?: number;
                /**
                 * Format: int32
                 * @description The variant ID of the product.
                 * @example 152
                 */
                variant_id?: number;
            }[];
        };
        /** wishlist_Put */
        wishlist_Put: {
            /**
             * Format: int32
             * @description The customer ID. A read-only value.
             */
            customer_id: number;
            /** @description Whether the wishlist is available to the public. */
            is_public?: boolean;
            /** @description The title of the wishlist. */
            name?: string;
            /** @description Array of wishlist items. */
            items: {
                /**
                 * Format: int32
                 * @description The ID of the item.
                 * @example 12
                 */
                id?: number;
                /**
                 * Format: int32
                 * @description The ID of the product.
                 * @example 55
                 */
                product_id?: number;
                /**
                 * Format: int32
                 * @description The variant ID of the product.
                 * @example 22
                 */
                variant_id?: number;
            }[];
        };
        /** wishlist_Full */
        wishlist_Full: {
            /**
             * Format: int32
             * @description Wishlist ID, provided after creating a wishlist with a POST.
             * @example 30
             */
            id?: number;
            /**
             * Format: int32
             * @description The ID the customer to which the wishlist belongs.
             * @example 12
             */
            customer_id?: number;
            /**
             * @description The name of the wishlist.
             * @example Christmas List
             */
            name?: string;
            /**
             * @description Whether the wishlist is available to the public.
             * @example true
             */
            is_public?: boolean;
            /**
             * Format: uuid
             * @description The token of the wishlist. This is created internally within BigCommerce. The wishlist ID is to be used for external apps. Read-Only.
             * @example 02d55481-13eb-4d1e-9d79-9062b518570d
             */
            token?: string;
            /** @description Array of wishlist items. */
            items?: components['schemas']['wishlistItem_Full'][];
        };
        /** wishlistItem_Full */
        wishlistItem_Full: {
            /**
             * Format: int32
             * @description The ID of the item.
             * @example 12
             */
            id?: number;
            /**
             * Format: int32
             * @description The ID of the product.
             * @example 55
             */
            product_id?: number;
            /**
             * Format: int32
             * @description The variant ID of the product.
             * @example 22
             */
            variant_id?: number;
        };
        /** wishlistItem_Post */
        wishlistItem_Post: {
            items?: {
                /** @example 12 */
                product_id?: number;
                /** @example 152 */
                variant_id?: number;
            }[];
        };
        /**
         * pagination
         * @description Data about the response, including pagination and collection totals.
         */
        pagination: {
            /**
             * Format: int32
             * @description Total number of items in the result set.
             */
            total?: number;
            /**
             * Format: int32
             * @description Total number of items in the collection response.
             */
            count?: number;
            /**
             * Format: int32
             * @description The amount of items returned in the collection per page, controlled by the limit parameter.
             */
            per_page?: number;
            /**
             * Format: int32
             * @description The page you are currently on within the collection.
             */
            current_page?: number;
            /**
             * Format: int32
             * @description The total number of pages in the collection.
             */
            total_pages?: number;
        };
        /** metaCollection */
        metaCollection: {
            pagination?: components['schemas']['pagination'];
        };
    };
    parameters: {
        /** @description ID of the Wishlist. */
        WishlistID: number;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        ContentType: string;
    };
}
export interface operations {
    /** Returns a list of wishlists. Optional filter parameters can be passed in. */
    WishlistsGet: {
        parameters: {
            query: {
                /** All wishlists relating to the customer. */
                customer_id?: number;
                /** The page number of results per page. 1 is the default and starts from record 0. */
                page?: number;
                /** The numbers of items to return per page. Default is 50 and maximum is 250. */
                limit?: number;
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        data?: components['schemas']['wishlist_Full'][];
                        meta?: components['schemas']['metaCollection'];
                    };
                };
            };
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Internal server error. */
            500: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
        };
    };
    /**
     * Creates a wishlist and wishlist item. More than one item can be added in the POST.
     *
     * **Required Fields**
     * * name
     * * customer_id
     */
    WishlistsPost: {
        parameters: {
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                'Content-Type': components['parameters']['ContentType'];
            };
        };
        responses: {
            201: {
                content: {
                    'application/json': {
                        data?: components['schemas']['wishlist_Full'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Internal server error. */
            500: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['wishlist_Post'];
            };
        };
    };
    /** Deletes a wishlist item. */
    WishlistsItemsByIdDelete: {
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
                item_id: number;
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        data?: components['schemas']['wishlist_Full'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Wishlist not found. */
            404: {
                content: {
                    'application/json': {
                        [key: string]: unknown;
                    };
                };
            };
            /** Internal server error. */
            500: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
        };
    };
    /** Returns a single wishlist. */
    WishlistsByIdGet: {
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        data?: components['schemas']['wishlist_Full'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Wishlist not found. */
            404: {
                content: {
                    'application/json': {
                        [key: string]: unknown;
                    };
                };
            };
            /** Internal server error. */
            500: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
        };
    };
    /**
     * Updates a wishlist.
     *
     * Use this endpoint to update existing wishlist items, change the wishlist ºs name and whether the wishlist is available publicly. To add or delete a wishlist item, see [Wishlist Items](/docs/rest-management/wishlists/wishlists-items).
     */
    WishlistsByIdPut: {
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                'Content-Type': components['parameters']['ContentType'];
            };
        };
        responses: {
            201: {
                content: {
                    'application/json': {
                        data?: components['schemas']['wishlist_Full'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Internal server error. */
            500: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['wishlist_Put'];
            };
        };
    };
    /** Deletes a wishlist. */
    WishlistsByIdDelete: {
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
            };
        };
        responses: {
            204: never;
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Internal server error. */
            500: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
        };
    };
    /** Adds a wishlist item. More than one item can be added at a time. */
    WishlistsItemsByIdPost: {
        parameters: {
            path: {
                /** ID of the Wishlist. */
                wishlist_id: components['parameters']['WishlistID'];
            };
            header: {
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components['parameters']['Accept'];
                /** The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
                'Content-Type': components['parameters']['ContentType'];
            };
        };
        responses: {
            201: {
                content: {
                    'application/json': {
                        data?: components['schemas']['wishlist_Full'];
                        /** @description Response metadata. */
                        meta?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            /** Authentication information is missing or invalid. */
            401: {
                content: {
                    'application/json': {
                        /** Format: int32 */
                        status?: number;
                        title?: string;
                        type?: string;
                    };
                };
            };
            /** Wishlist not found. */
            404: unknown;
            /** Internal server error. */
            500: unknown;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['wishlistItem_Post'];
            };
        };
    };
}
export interface external {
}
