/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/countries': {
        /** Get a list of all countries available. A country or territory, identifiable by an ISO 3166 country code. */
        get: operations['get-all-countries'];
    };
    '/countries/{id}': {
        /** Returns a single *Country*.  Gets a country. A country or territory, identifiable by an ISO 3166 country code. */
        get: operations['get-a-country'];
        parameters: {
            path: {
                id: string;
            };
        };
    };
    '/countries/{country_id}/states': {
        /**
         * Returns a list of *States* belonging to a *Country*.
         * A state or province, identifiable by an ISO 3166 subdivision code.
         */
        get: operations['get-all-country-states'];
        parameters: {
            path: {
                country_id: string;
            };
        };
    };
    '/countries/{country_id}/states/{id}': {
        /**
         * Returns a *State*.
         * A state or province, identifiable by an ISO 3166 subdivision code.
         */
        get: operations['get-a-state'];
        parameters: {
            path: {
                country_id: string;
                id: string;
            };
        };
    };
    '/countries/count': {
        /** Returns a count of all countries. */
        get: operations['get-count-countries'];
    };
    '/countries/states/count': {
        /** Returns a count of all states. */
        get: operations['get-count-states'];
    };
    '/countries/states': {
        /** Returns a list of all states. */
        get: operations['get-all-states'];
    };
    '/countries/{country_id}/states/count': {
        /** Returns a count of a country's states. */
        get: operations['get-count-country-states'];
        parameters: {
            path: {
                country_id: string;
            };
        };
    };
}
export interface components {
    schemas: {
        /**
         * country_Full
         * @example [object Object]
         */
        country_Full: {
            /**
             * @description Id of the country.
             * @example 13
             */
            id?: number;
        } & components['schemas']['country_Base'] & {
            states?: components['schemas']['countriesStates_Full'];
        };
        /**
         * countriesStates_Full
         * @description Refers to the `states` object return in `GET` countries requests.
         */
        countriesStates_Full: {
            /** @example https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states */
            url?: string;
            /** @example /countries/13/states */
            resource?: string;
        };
        /**
         * countriesState_Full
         * @description Refers to the state returned in `GET` states requests.
         * @example [object Object]
         */
        countriesState_Full: {
            /**
             * @description Numeric ID of the state/province.
             * @example 208
             */
            id?: number;
            /**
             * @description Name of the state/province.
             * @example Australian Capital Territory
             */
            state?: string;
            /**
             * @description Abbreviation for the state/province.
             * @example ACT
             */
            state_abbreviation?: string;
            /**
             * @description Numeric ID of the state’s/province’s associated country.
             * @example 13
             */
            country_id?: number;
        };
        /** country_Base */
        country_Base: {
            /**
             * @description Country name.
             * @example Australia
             */
            country?: string;
            /**
             * @description 2-letter country code.
             * @example AU
             */
            country_iso2?: string;
            /**
             * @description 3-letter country code.
             * @example AUS
             */
            country_iso3?: string;
        };
        count_Full: {
            count?: number;
        };
    };
    responses: {
        countriesResponse: {
            content: {
                'application/json': components['schemas']['country_Full'];
            };
        };
        countriesStatesResponse: {
            content: {
                'application/json': components['schemas']['countriesState_Full'];
            };
        };
        countryCollection_Resp: {
            content: {
                'application/json': components['schemas']['country_Full'][];
            };
        };
        countriesStatesCollectionResponse: {
            content: {
                'application/json': components['schemas']['countriesState_Full'][];
            };
        };
        countResponse: {
            content: {
                'application/json': components['schemas']['count_Full'];
            };
        };
    };
}
export interface operations {
    /** Get a list of all countries available. A country or territory, identifiable by an ISO 3166 country code. */
    'get-all-countries': {
        parameters: {
            header: {
                Accept: string;
                'Content-Type': string;
            };
            query: {
                /** Number of pages */
                page?: number;
                /** Count per page */
                limit?: number;
                country?: string;
                country_iso2?: string;
                country_iso3?: string;
            };
        };
        responses: {
            200: components['responses']['countryCollection_Resp'];
        };
    };
    /** Returns a single *Country*.  Gets a country. A country or territory, identifiable by an ISO 3166 country code. */
    'get-a-country': {
        parameters: {
            path: {
                /** The id of the country. */
                id: number;
            };
            header: {
                Accept: string;
                'Content-Type': string;
            };
        };
        responses: {
            200: components['responses']['countriesResponse'];
        };
    };
    /**
     * Returns a list of *States* belonging to a *Country*.
     * A state or province, identifiable by an ISO 3166 subdivision code.
     */
    'get-all-country-states': {
        parameters: {
            path: {
                /** Id of the country */
                country_id: number;
            };
            header: {
                Accept: string;
                'Content-Type': string;
            };
            query: {
                /** Name of the state/province. */
                state?: string;
                /** Abbreviation for the state/province. */
                state_abbreviation?: string;
                /** Number of pages */
                page?: number;
                /** Count per page */
                limit?: number;
            };
        };
        responses: {
            200: components['responses']['countriesStatesCollectionResponse'];
        };
    };
    /**
     * Returns a *State*.
     * A state or province, identifiable by an ISO 3166 subdivision code.
     */
    'get-a-state': {
        parameters: {
            path: {
                /** Id of the country */
                country_id: number;
                /** Id of the states */
                id: number;
            };
            header: {
                Accept: string;
                'Content-Type': string;
            };
        };
        responses: {
            200: components['responses']['countriesStatesResponse'];
        };
    };
    /** Returns a count of all countries. */
    'get-count-countries': {
        responses: {
            200: components['responses']['countResponse'];
        };
    };
    /** Returns a count of all states. */
    'get-count-states': {
        responses: {
            200: components['responses']['countResponse'];
        };
    };
    /** Returns a list of all states. */
    'get-all-states': {
        parameters: {
            query: {
                /** The number of results to return per request. */
                limit?: number;
                /** The ordered grouping of results to return. */
                page?: number;
            };
        };
        responses: {
            200: components['responses']['countriesStatesCollectionResponse'];
        };
    };
    /** Returns a count of a country's states. */
    'get-count-country-states': {
        parameters: {
            path: {
                country_id: string;
            };
        };
        responses: {
            200: components['responses']['countResponse'];
        };
    };
}
export interface external {
}
